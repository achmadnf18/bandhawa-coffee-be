{"version":3,"sources":["../src/app.ts"],"sourcesContent":["import compression from 'compression';\r\nimport cookieParser from 'cookie-parser';\r\nimport cors from 'cors';\r\nimport express from 'express';\r\nimport helmet from 'helmet';\r\nimport hpp from 'hpp';\r\nimport morgan from 'morgan';\r\nimport swaggerJSDoc from 'swagger-jsdoc';\r\nimport swaggerUi from 'swagger-ui-express';\r\nimport { NODE_ENV, PORT, LOG_FORMAT, ORIGIN, CREDENTIALS } from '@config';\r\nimport DB from '@databases';\r\nimport { Routes } from '@interfaces/routes.interface';\r\nimport errorMiddleware from '@middlewares/error.middleware';\r\nimport { logger, stream } from '@utils/logger';\r\n\r\nclass App {\r\n  public app: express.Application;\r\n  public env: string;\r\n  public port: string | number;\r\n\r\n  constructor(routes: Routes[]) {\r\n    this.app = express();\r\n    this.env = NODE_ENV || 'development';\r\n    this.port = PORT || 3000;\r\n\r\n    this.connectToDatabase();\r\n    this.initializeMiddlewares();\r\n    this.initializeRoutes(routes);\r\n    this.initializeSwagger();\r\n    this.initializeErrorHandling();\r\n  }\r\n\r\n  public listen() {\r\n    this.app.listen(this.port, () => {\r\n      logger.info(`=================================`);\r\n      logger.info(`======= ENV: ${this.env} =======`);\r\n      logger.info(`ðŸš€ App listening on the port ${this.port}`);\r\n      logger.info(`=================================`);\r\n    });\r\n  }\r\n\r\n  public getServer() {\r\n    return this.app;\r\n  }\r\n\r\n  private connectToDatabase() {\r\n    DB.sequelize.sync({ force: false });\r\n  }\r\n\r\n  private initializeMiddlewares() {\r\n    this.app.use(morgan(LOG_FORMAT, { stream }));\r\n    this.app.use(cors({ origin: ORIGIN }));\r\n    this.app.use(hpp());\r\n    this.app.use(helmet());\r\n    this.app.use(helmet.crossOriginResourcePolicy({ policy: 'cross-origin' }));\r\n    this.app.use(compression());\r\n    this.app.use(express.json({ limit: '50mb' }));\r\n    this.app.use(express.urlencoded({ limit: '50mb', extended: true }));\r\n    this.app.use(express.static('public'));\r\n    this.app.use(cookieParser());\r\n  }\r\n\r\n  private initializeRoutes(routes: Routes[]) {\r\n    routes.forEach((route) => {\r\n      this.app.use('/', route.router);\r\n    });\r\n  }\r\n\r\n  private initializeSwagger() {\r\n    const options = {\r\n      swaggerDefinition: {\r\n        info: {\r\n          title: 'REST API',\r\n          version: '1.0.0',\r\n          description: 'Example docs',\r\n        },\r\n      },\r\n      apis: ['swagger.yaml'],\r\n    };\r\n\r\n    const specs = swaggerJSDoc(options);\r\n    this.app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(specs));\r\n  }\r\n\r\n  private initializeErrorHandling() {\r\n    this.app.use(errorMiddleware);\r\n  }\r\n}\r\n\r\nexport default App;\r\n"],"names":["App","listen","app","port","logger","info","env","getServer","connectToDatabase","DB","sequelize","sync","force","initializeMiddlewares","use","morgan","LOG_FORMAT","stream","cors","origin","ORIGIN","hpp","helmet","crossOriginResourcePolicy","policy","compression","express","json","limit","urlencoded","extended","static","cookieParser","initializeRoutes","routes","forEach","route","router","initializeSwagger","options","swaggerDefinition","title","version","description","apis","specs","swaggerJSDoc","swaggerUi","serve","setup","initializeErrorHandling","errorMiddleware","constructor","NODE_ENV","PORT"],"mappings":"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"}