{"version":3,"sources":["../../src/tests/auth.test.ts"],"sourcesContent":["import bcrypt from 'bcrypt';\r\nimport { Sequelize } from 'sequelize';\r\nimport request from 'supertest';\r\nimport App from '@/app';\r\nimport { CreateUserDto } from '@dtos/users.dto';\r\nimport AuthRoute from '@routes/auth.route';\r\n\r\nafterAll(async () => {\r\n  await new Promise<void>(resolve => setTimeout(() => resolve(), 500));\r\n});\r\n\r\ndescribe('Testing Auth', () => {\r\n  describe('[POST] /signup', () => {\r\n    it('response should have the Create userData', async () => {\r\n      const userData: CreateUserDto = {\r\n        email: 'test@email.com',\r\n        password: 'q1w2e3r4!',\r\n      };\r\n\r\n      const authRoute = new AuthRoute();\r\n      const users = authRoute.authController.authService.users;\r\n\r\n      users.findOne = jest.fn().mockReturnValue(null);\r\n      users.create = jest.fn().mockReturnValue({\r\n        id: 1,\r\n        email: userData.email,\r\n        password: await bcrypt.hash(userData.password, 10),\r\n      });\r\n\r\n      (Sequelize as any).authenticate = jest.fn();\r\n      const app = new App([authRoute]);\r\n      return request(app.getServer()).post(`${authRoute.path}signup`).send(userData).expect(201);\r\n    });\r\n  });\r\n\r\n  describe('[POST] /login', () => {\r\n    it('response should have the Set-Cookie header with the Authorization token', async () => {\r\n      const userData: CreateUserDto = {\r\n        email: 'test@email.com',\r\n        password: 'q1w2e3r4!',\r\n      };\r\n\r\n      const authRoute = new AuthRoute();\r\n      const users = authRoute.authController.authService.users;\r\n\r\n      users.findOne = jest.fn().mockReturnValue({\r\n        id: 1,\r\n        email: userData.email,\r\n        password: await bcrypt.hash(userData.password, 10),\r\n      });\r\n\r\n      (Sequelize as any).authenticate = jest.fn();\r\n      const app = new App([authRoute]);\r\n      return request(app.getServer())\r\n        .post(`${authRoute.path}login`)\r\n        .send(userData)\r\n        .expect('Set-Cookie', /^Authorization=.+/);\r\n    });\r\n  });\r\n\r\n  // describe('[POST] /logout', () => {\r\n  //   it('logout Set-Cookie Authorization=; Max-age=0', async () => {\r\n  //     const authRoute = new AuthRoute();\r\n\r\n  //     const app = new App([authRoute]);\r\n  //     return request(app.getServer())\r\n  //       .post(`${authRoute.path}logout`)\r\n  //       .expect('Set-Cookie', /^Authorization=\\;/);\r\n  //   });\r\n  // });\r\n});\r\n"],"names":["afterAll","Promise","resolve","setTimeout","describe","it","userData","email","password","authRoute","AuthRoute","users","authController","authService","findOne","jest","fn","mockReturnValue","create","id","bcrypt","hash","Sequelize","authenticate","app","App","request","getServer","post","path","send","expect"],"mappings":"AAAA;;;;+CAAmB;2BACO;kDACN;4CACJ;kDAEM;;;;;;AAEtBA,SAAS,UAAY;IACnB,MAAM,IAAIC,QAAcC,CAAAA,UAAWC,WAAW,IAAMD,WAAW;AACjE;AAEAE,SAAS,gBAAgB,IAAM;IAC7BA,SAAS,kBAAkB,IAAM;QAC/BC,GAAG,4CAA4C,UAAY;YACzD,MAAMC,WAA0B;gBAC9BC,OAAO;gBACPC,UAAU;YACZ;YAEA,MAAMC,YAAY,IAAIC,kBAAS;YAC/B,MAAMC,QAAQF,UAAUG,cAAc,CAACC,WAAW,CAACF,KAAK;YAExDA,MAAMG,OAAO,GAAGC,KAAKC,EAAE,GAAGC,eAAe,CAAC,IAAI;YAC9CN,MAAMO,MAAM,GAAGH,KAAKC,EAAE,GAAGC,eAAe,CAAC;gBACvCE,IAAI;gBACJZ,OAAOD,SAASC,KAAK;gBACrBC,UAAU,MAAMY,eAAM,CAACC,IAAI,CAACf,SAASE,QAAQ,EAAE;YACjD;YAECc,oBAAS,CAASC,YAAY,GAAGR,KAAKC,EAAE;YACzC,MAAMQ,MAAM,IAAIC,YAAG,CAAC;gBAAChB;aAAU;YAC/B,OAAOiB,IAAAA,kBAAO,EAACF,IAAIG,SAAS,IAAIC,IAAI,CAAC,CAAC,EAAEnB,UAAUoB,IAAI,CAAC,MAAM,CAAC,EAAEC,IAAI,CAACxB,UAAUyB,MAAM,CAAC;QACxF;IACF;IAEA3B,SAAS,iBAAiB,IAAM;QAC9BC,GAAG,2EAA2E,UAAY;YACxF,MAAMC,WAA0B;gBAC9BC,OAAO;gBACPC,UAAU;YACZ;YAEA,MAAMC,YAAY,IAAIC,kBAAS;YAC/B,MAAMC,QAAQF,UAAUG,cAAc,CAACC,WAAW,CAACF,KAAK;YAExDA,MAAMG,OAAO,GAAGC,KAAKC,EAAE,GAAGC,eAAe,CAAC;gBACxCE,IAAI;gBACJZ,OAAOD,SAASC,KAAK;gBACrBC,UAAU,MAAMY,eAAM,CAACC,IAAI,CAACf,SAASE,QAAQ,EAAE;YACjD;YAECc,oBAAS,CAASC,YAAY,GAAGR,KAAKC,EAAE;YACzC,MAAMQ,MAAM,IAAIC,YAAG,CAAC;gBAAChB;aAAU;YAC/B,OAAOiB,IAAAA,kBAAO,EAACF,IAAIG,SAAS,IACzBC,IAAI,CAAC,CAAC,EAAEnB,UAAUoB,IAAI,CAAC,KAAK,CAAC,EAC7BC,IAAI,CAACxB,UACLyB,MAAM,CAAC,cAAc;QAC1B;IACF;AAYF"}